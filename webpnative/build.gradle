/*
 * Copyright 2019 wanghonglin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

publish {

    def groupProjectID = 'com.wanghong.webpnative'
    def artifactProjectID = 'webpnative'
    def publishVersionID = '0.1.0'

    userOrg = 'wanghonglin'
    groupId = groupProjectID
    artifactId = artifactProjectID
    publishVersion = publishVersionID
    desc = 'Another simple libwebp integration for Android'
    website = 'https://github.com/WanghongLin/AndroidWebP'
}

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            ndkBuild {
                // arguments 'NDK_APPLICATION_MK:=Application.mk'
            }
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'Android.mk'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

afterEvaluate {
    project.tasks.all {
        if (it.name == 'compileDebugKotlin') {
            def clzDir = it.destinationDir
            it.doLast {
                println "bootstrap class path ${android.getBootClasspath()[0]}"
                println "class path ${clzDir}"
                def output = android.sourceSets.main.jni.srcDirs[0].path.replace('jni', 'cpp') + File.separator + "webpnative.h"
                // android.getSdkDirectory().getAbsolutePath()
                println "output to ${output}"
                exec {
                    executable '/bin/bash'
                    args '-c', "javah -bootclasspath ${android.getBootClasspath()[0]} -cp ${clzDir} -o ${output} com.wanghong.webpnative.WebPNative"
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}
